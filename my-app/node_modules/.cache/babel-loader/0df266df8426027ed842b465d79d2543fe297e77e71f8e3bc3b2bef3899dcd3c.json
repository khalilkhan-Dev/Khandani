{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects\\\\react projects\\\\Khandani\\\\my-app\\\\src\\\\components\\\\addAdmin\\\\CreateAdmin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useHistory from './Adminpages.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateAdmin = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: ''\n  });\n  const history = useHistory();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // You can save the form data to localStorage or send it to a server here\n    // For simplicity, I'll use localStorage in this example\n    localStorage.setItem('formData', JSON.stringify(formData));\n\n    // Navigate to the second page\n    history.push('/page2');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Page 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n_s(CreateAdmin, \"33/WCoIZElk+7IHfmG1nnc2E4/w=\", false, function () {\n  return [useHistory];\n});\n_c = CreateAdmin;\nexport default CreateAdmin;\nvar _c;\n$RefreshReg$(_c, \"CreateAdmin\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateAdmin","_s","formData","setFormData","name","email","history","handleChange","e","value","target","prevData","handleSubmit","preventDefault","localStorage","setItem","JSON","stringify","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["D:/web projects/react projects/Khandani/my-app/src/components/addAdmin/CreateAdmin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport useHistory from './Adminpages.js'\r\n\r\nconst CreateAdmin = () => {\r\n    const [formData, setFormData] = useState({ name: '', email: '' });\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // You can save the form data to localStorage or send it to a server here\r\n    // For simplicity, I'll use localStorage in this example\r\n    localStorage.setItem('formData', JSON.stringify(formData));\r\n\r\n    // Navigate to the second page\r\n    history.push('/page2');\r\n  };\r\n\r\n  return (\r\n    <>\r\n <div>\r\n      <h1>Page 1</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} required />\r\n\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateAdmin"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACnE,MAAMC,OAAO,GAAGX,UAAU,CAAC,CAAC;EAE5B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEJ,IAAI;MAAEK;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCP,WAAW,CAAEQ,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACP,IAAI,GAAGK;IAAM,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMG,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACA;IACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ,CAAC,CAAC;;IAE1D;IACAI,OAAO,CAACY,IAAI,CAAC,QAAQ,CAAC;EACxB,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACHtB,OAAA;MAAAsB,QAAA,gBACKtB,OAAA;QAAAsB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf1B,OAAA;QAAM2B,QAAQ,EAAEZ,YAAa;QAAAO,QAAA,gBAC3BtB,OAAA;UAAO4B,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC1B,OAAA;UAAO6B,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,MAAM;UAACvB,IAAI,EAAC,MAAM;UAACK,KAAK,EAAEP,QAAQ,CAACE,IAAK;UAACwB,QAAQ,EAAErB,YAAa;UAACsB,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAElG1B,OAAA;UAAO4B,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC1B,OAAA;UAAO6B,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,OAAO;UAACvB,IAAI,EAAC,OAAO;UAACK,KAAK,EAAEP,QAAQ,CAACG,KAAM;UAACuB,QAAQ,EAAErB,YAAa;UAACsB,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEtG1B,OAAA;UAAQ6B,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBAEJ,CAAC;AAEP,CAAC;AAAAtB,EAAA,CApCKD,WAAW;EAAA,QAECL,UAAU;AAAA;AAAAmC,EAAA,GAFtB9B,WAAW;AAsCjB,eAAeA,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}